type Concept {
  name: String! @id @search(by: [hash])
  arguments: [ConceptArgumentType]! @hasInverse(field: concept)
  composition: ConceptComposition @hasInverse(field: concept)
}

type ConceptArgumentType {
  id: ID!
  name: String!
  concept: Concept!
  capacity: String!
}

type ConceptComposition {
  id: ID!
  concept: Concept!
  subConcepts: [Concept]!
  connections: [SubConceptConnection]!
}

type SubConceptConnection {
  sourceSCIndex: Int!
  sourceSCArgumentType: ConceptArgumentType!
  targetConceptType: String! # 'Self' | 'SC' | 'Argument'
  targetConceptIndex: Int
}
